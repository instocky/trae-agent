#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Google Gemini API
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à API –∫–ª—é—á –æ—Ç https://aistudio.google.com/apikey
"""

import os
from google import genai
from google.genai import types

def test_gemini_basic():
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Gemini API"""
    
    # –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_API_KEY' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á
    api_key = "AIzaSyDOVZYFiT4TAgqbhZSDKyOIymL_LtDkKHg"  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à API –∫–ª—é—á –∏–∑ Google AI Studio
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è Gemini Developer API
    client = genai.Client(api_key=api_key)
    
    try:
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
        response = client.models.generate_content(
            model='gemini-2.0-flash-001',
            contents='–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –ø—Ä–æ Python.',
            config=types.GenerateContentConfig(
                temperature=0.7,
                max_output_tokens=100,
            )
        )
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gemini API —É—Å–ø–µ—à–Ω–æ!")
        print(f"–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:\n{response.text}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Gemini API: {e}")
        return False

def test_gemini_with_config():
    """–¢–µ—Å—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏"""
    
    api_key = "AIzaSyDOVZYFiT4TAgqbhZSDKyOIymL_LtDkKHg"  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à API –∫–ª—é—á
    client = genai.Client(api_key=api_key)
    
    try:
        # –¢–µ—Å—Ç —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        response = client.models.generate_content(
            model='gemini-2.0-flash-001',
            contents='–ß—Ç–æ —Ç–∞–∫–æ–µ LLM –∞–≥–µ–Ω—Ç—ã?',
            config=types.GenerateContentConfig(
                system_instruction='–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–æ.',
                temperature=0.3,
                max_output_tokens=150,
            )
        )
        
        print("‚úÖ –¢–µ—Å—Ç —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —É—Å–ø–µ—à–µ–Ω!")
        print(f"–û—Ç–≤–µ—Ç —Å —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π:\n{response.text}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π: {e}")
        return False

def test_gemini_models():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π"""
    
    api_key = "AIzaSyDOVZYFiT4TAgqbhZSDKyOIymL_LtDkKHg"  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à API –∫–ª—é—á
    client = genai.Client(api_key=api_key)
    
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏ (–≤–∫–ª—é—á–∞—è –Ω–æ–≤—É—é 2.5 Flash)
        models_to_test = [
            'gemini-2.5-flash',           # –ù–æ–≤–∞—è –ª—É—á—à–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤
            'gemini-2.5-flash-preview-05-20',  # Preview –≤–µ—Ä—Å–∏—è
            'gemini-2.0-flash-001',       # –ü—Ä–µ–¥—ã–¥—É—â–∞—è –≤–µ—Ä—Å–∏—è
            'gemini-1.5-flash',           # –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è
        ]
        
        for model in models_to_test:
            try:
                response = client.models.generate_content(
                    model=model,
                    contents='–°–∫–∞–∂–∏ "–ü—Ä–∏–≤–µ—Ç" –Ω–∞ —Ç—Ä–µ—Ö —è–∑—ã–∫–∞—Ö.',
                    config=types.GenerateContentConfig(max_output_tokens=50)
                )
                print(f"‚úÖ –ú–æ–¥–µ–ª—å {model}: —Ä–∞–±–æ—Ç–∞–µ—Ç")
                # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ response.text
                answer = response.text.strip() if response.text else "–û—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π"
                print(f"   –û—Ç–≤–µ—Ç: {answer}")
                
            except Exception as model_error:
                print(f"‚ùå –ú–æ–¥–µ–ª—å {model}: {model_error}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π: {e}")
        return False

def test_gemini_agent_capabilities():
    """–¢–µ—Å—Ç –∞–≥–µ–Ω—Ç–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Gemini 2.5 Flash"""
    
    api_key = "YOUR_API_KEY"  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à API –∫–ª—é—á
    client = genai.Client(api_key=api_key)
    
    try:
        # –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ (–≤–∞–∂–Ω–æ –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤)
        response = client.models.generate_content(
            model='gemini-2.5-flash',
            contents='–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É: "–°–æ–∑–¥–∞—Ç—å Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏". –†–∞–∑–±–µ–π –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏.',
            config=types.GenerateContentConfig(
                system_instruction='''–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á–∏ –∏ —Ä–∞–∑–±–∏–≤–∞–π –∏—Ö –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏.
                –û—Ç–≤–µ—á–∞–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
                1. –ü–æ–¥–∑–∞–¥–∞—á–∞ 1
                2. –ü–æ–¥–∑–∞–¥–∞—á–∞ 2
                3. ...''',
                temperature=0.1,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
                max_output_tokens=200,
            )
        )
        
        print("‚úÖ –¢–µ—Å—Ç –∞–≥–µ–Ω—Ç–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —É—Å–ø–µ—à–µ–Ω!")
        print(f"–ê–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á–∏:\n{response.text}")
        
        # –¢–µ—Å—Ç –º—ã—à–ª–µ–Ω–∏—è (thinking) - –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
        response2 = client.models.generate_content(
            model='gemini-2.5-flash',
            contents='–û–±—ä—è—Å–Ω–∏ –ø–æ—à–∞–≥–æ–≤–æ, –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ Python',
            config=types.GenerateContentConfig(
                temperature=0.2,
                max_output_tokens=300,
            )
        )
        
        print("\n‚úÖ –¢–µ—Å—Ç –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è:")
        print(f"{response2.text[:200]}...")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∞–≥–µ–Ω—Ç–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: {e}")
        return False

if __name__ == "__main__":
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Gemini API")
    print("=" * 50)
    
    print("\n1. –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
    test_gemini_basic()
    
    print("\n2. –¢–µ—Å—Ç —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:")
    test_gemini_with_config()
    
    print("\n3. –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π:")
    test_gemini_models()
    
    print("\n4. –¢–µ—Å—Ç –∞–≥–µ–Ω—Ç–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π (Gemini 2.5 Flash):")
    test_gemini_agent_capabilities()
    
    print("\n" + "=" * 50)
    print("üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_API_KEY' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á")
    print("2. API –∫–ª—é—á –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∑–¥–µ—Å—å: https://aistudio.google.com/apikey")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_gemini.py")
    print("4. Gemini 2.5 Flash - –ª—É—á—à–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤!")
